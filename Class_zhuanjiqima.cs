using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace 计算机原理__模型机
{
    class Class_zhuanjiqima
    {
        public static string jiqima_2(string code)
        {
            string strValue = "";
            string[] str = new string[] { "000", "001", "010", "011", "100", "101", "110", "111" };//寄存器编号
            string[] codes = code.Split(new char[2] { ' ', ',' });//双操作数
            string[] codes1 = code.Split(new char[1] { ' ' });//单操作数
            if (codes[0] == "nop") strValue += "0000 " + "000 " + "000 " + "000" + "000\n";
            if (codes[0] == "add")
            {
                char[] s = codes[1].ToCharArray();
                char[] d = codes[2].ToCharArray();
                if (s[0] == 'r')// 源操作数直接寻址
                {
                    if (d[0] == 'r')
                    {
                        strValue += "0001 " + "000 " + str[((int)s[1]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";// 目的操作数直接寻址
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) //间接寻址
                    {
                        strValue += "0001 " + "000 " + str[((int)s[1]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0001 " + "000 " + str[((int)s[1]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0001 " + "000 " + str[((int)s[1]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')//变址寻址
                    {
                        strValue += "0001 " + "000 " + str[((int)s[1]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s.Length == 4)// 源操作数间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0001 " + "001 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0001 " + "001 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }

                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0001 " + "001 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0001 " + "001 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0001 " + "001 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s.Length == 5)//源操作数 自增型 间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0001 " + "010 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0001 " + "010 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0001 " + "010 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0001 " + "010 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0001 " + "010 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+' && s.Length == 6)//源操作数自增型 双间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0001 " + "011 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0001 " + "011 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0001 " + "011 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0001 " + "011 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0001 " + "011 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')' && s.Length == 5)// 源操作数 变址寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0001 " + "100 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0001 " + "100 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0001 " + "100 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0001 " + "100 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0001 " + "100 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
            }
            /*******************************************减法************************************************************************************************************/
            if (codes[0] == "sub")
            {
                char[] s = codes[1].ToCharArray();
                char[] d = codes[2].ToCharArray();
                if (s[0] == 'r')// 源操作数直接寻址
                {
                    if (d[0] == 'r')// 目的操作数直接寻址
                    {
                        strValue += "0010 " + "000 " + str[((int)s[1]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) //间接寻址
                    {
                        strValue += "0010 " + "000 " + str[((int)s[1]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0010 " + "000 " + str[((int)s[1]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0010 " + "000 " + str[((int)s[1]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')//变址寻址
                    {
                        strValue += "0010 " + "000 " + str[((int)s[1]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s.Length == 4)// 源操作数间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0010 " + "001 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0010 " + "001 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }

                    if (d[0] == '(' && d[3] == ')' && d[4] == '+' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0010 " + "001 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0010 " + "001 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0010 " + "001 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s.Length == 5)//源操作数 自增型 间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0010 " + "010 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0010 " + "010 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0010 " + "010 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0010 " + "010 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0010 " + "010 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+' && s.Length == 6)//源操作数自增型 双间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0010 " + "011 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0010 " + "011 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0010 " + "011 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0010 " + "011 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0010 " + "011 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')' && s.Length == 5)// 源操作数 变址寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0010 " + "100 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0010 " + "100 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0010 " + "100 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0010 " + "100 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0010 " + "100 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
            }
            /***************************************************************逻辑乘****************************************************************************************/
            if (codes[0] == "and")
            {
                char[] s = codes[1].ToCharArray();
                char[] d = codes[2].ToCharArray();
                if (s[0] == 'r')// 源操作数直接寻址
                {
                    if (d[0] == 'r')// 目的操作数直接寻址
                    {
                        strValue += "0011 " + "000 " + str[((int)s[1]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) //间接寻址
                    {
                        strValue += "0011 " + "000 " + str[((int)s[1]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0011 " + "000 " + str[((int)s[1]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0011 " + "000 " + str[((int)s[1]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')//变址寻址
                    {
                        strValue += "0011 " + "000 " + str[((int)s[1]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && d.Length == 4)// 源操作数间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0011 " + "001 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0011 " + "001 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }

                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0011 " + "001 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0011 " + "001 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0011 " + "001 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s[4] == '+' && s.Length == 5)//源操作数 自增型 间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0011 " + "010 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0011 " + "010 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0011 " + "010 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0011 " + "010 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0011 " + "010 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+' && s.Length == 6)//源操作数自增型 双间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0011 " + "011 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0011 " + "011 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0011 " + "011 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0011 " + "011 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0011 " + "011 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')' && s.Length == 5)// 源操作数 变址寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "0011 " + "100 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "0011 " + "100 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "0011 " + "100 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "0011 " + "100 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "0011 " + "100 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
            }
            /*************************************************数据传送指令**********************************************************************************************/
            if (codes[0] == "mov")
            {
                char[] s = codes[1].ToCharArray();
                char[] d = codes[2].ToCharArray();
                if (s[0] == 'r')// 源操作数直接寻址
                {
                    if (d[0] == 'r')// 目的操作数直接寻址
                    {
                        strValue += "1010 " + "000 " + str[((int)s[1]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) //间接寻址
                    {
                        strValue += "1010 " + "000 " + str[((int)s[1]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "1010 " + "000 " + str[((int)s[1]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "1010 " + "000 " + str[((int)s[1]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')//变址寻址
                    {
                        strValue += "1010 " + "000 " + str[((int)s[1]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && d.Length == 4)// 源操作数间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "1010 " + "001 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "1010 " + "001 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }

                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "1010 " + "001 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "1010 " + "001 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "1010 " + "001 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '(' && s[3] == ')' && s[4] == '+' && s.Length == 5)//源操作数 自增型 间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "1010 " + "010 " + str[((int)s[2]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "1010 " + "010 " + str[((int)s[2]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "1010 " + "010 " + str[((int)s[2]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "1010 " + "010 " + str[((int)s[2]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "1010 " + "010 " + str[((int)s[2]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+' && s.Length == 6)//源操作数自增型 双间接寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "1010 " + "011 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "1010 " + "011 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "1010 " + "011 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "1010 " + "011 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "1010 " + "011 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
                /***********************************************************************************************************************************************************/
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')' && s.Length == 5)// 源操作数 变址寻址
                {
                    if (d[0] == 'r')// 目的操作数 直接寻址
                    {
                        strValue += "1010 " + "100 " + str[((int)s[3]) - 48] + " 000 " + str[Convert.ToInt32(d[1].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 4) // 间接寻址
                    {
                        strValue += "1010 " + "100 " + str[((int)s[3]) - 48] + " 001 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '(' && d[3] == ')' && d.Length == 5)//自增型 间接寻址
                    {
                        strValue += "1010 " + "100 " + str[((int)s[3]) - 48] + " 010 " + str[Convert.ToInt32(d[2].ToString())] + "\n";
                    }
                    if (d[0] == '@' && d[1] == '(' && d[4] == ')' && d[5] == '+')//自增型 双间接寻址
                    {
                        strValue += "1010 " + "100 " + str[((int)s[3]) - 48] + " 011 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                    if (d[0] == 'x' && d[1] == '(' && d[4] == ')')// 变址寻址
                    {
                        strValue += "1010 " + "100 " + str[((int)s[3]) - 48] + " 100 " + str[Convert.ToInt32(d[3].ToString())] + "\n";
                    }
                }
            }
            /****************************************************单操作数加一指令**********************************************************************************/
            if (codes1[0] == "inc")
            {
                char[] s = codes1[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "0100 " + "000 " + "000 " + "000 " + str[((int)s[1]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 4) // 间接寻址
                {
                    strValue += "0100 " + "000 " + "000 " + "001 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 5)//自增型 间接寻址
                {
                    strValue += "0100 " + "000 " + "000 " + "010 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+')//自增型 双间接寻址
                {
                    strValue += "0100 " + "000 " + "000 " + "011 " + str[((int)s[3]) - 48] + "\n";
                }
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')')// 变址寻址
                {
                    strValue += "0100 " + "000 " + "000 " + "100 " + str[((int)s[3]) - 48] + "\n";
                }
            }
            /***********************************************单操作数减一指令*****************************************************************************************/
            if (codes1[0] == "dec")
            {
                char[] s = codes1[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "0101 " + "000 " + "000 " + "000 " + str[((int)s[1]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 4) // 间接寻址
                {
                    strValue += "0101 " + "000 " + "000 " + "001 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 5)//自增型 间接寻址
                {
                    strValue += "0101 " + "000 " + "000 " + "010 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+')//自增型 双间接寻址
                {
                    strValue += "0101 " + "000 " + "000 " + "011 " + str[((int)s[3]) - 48] + "\n";
                }
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')')// 变址寻址
                {
                    strValue += "0101 " + "000 " + "000 " + "100 " + str[((int)s[3]) - 48] + "\n";
                }
            }
            /***********************************************求补码指令****************************************************************************************/
            if (codes1[0] == "nec")
            {
                char[] s = codes1[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "0110 " + "000 " + "000 " + "000 " + str[((int)s[1]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 4) // 间接寻址
                {
                    strValue += "0110 " + "000 " + "000 " + "001 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '(' && s[3] == ')' && s.Length == 5)//自增型 间接寻址
                {
                    strValue += "0110 " + "000 " + "000 " + "010 " + str[((int)s[2]) - 48] + "\n";
                }
                if (s[0] == '@' && s[1] == '(' && s[4] == ')' && s[5] == '+')//自增型 双间接寻址
                {
                    strValue += "0110 " + "000 " + "000 " + "011 " + str[((int)s[3]) - 48] + "\n";
                }
                if (s[0] == 'x' && s[1] == '(' && s[4] == ')')// 变址寻址
                {
                    strValue += "0110 " + "000 " + "000 " + "100 " + str[((int)s[3]) - 48] + "\n";
                }
            }
            /**********************************************无条件相对跳转指令***************************************************************************************/
            if (codes1[0] == "jmp")
            {
                char[] s = codes1[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "0111 " + "000 " + "000 " + "000 " + str[((int)s[1]) - 48] + "\n";
                }
            }
            /*********************************************有进位跳转指令**********************************************************************************************/
            if (codes1[0] == "jc")
            {
                char[] s = codes1[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "1000 " + "000 " + "000 " + "000 " + str[((int)s[1]) - 48] + "\n";
                }
            }
            /******************************************载入立即数指令***********************************************************************************************/
            if (codes[0] == "ldi")
            {
                char[] s = codes[1].ToCharArray();
                if (s[0] == 'r')// 操作数 直接寻址
                {
                    strValue += "1110 " + The_Method.shiliu_erjinzhi(codes[2]) + "0 " + str[Convert.ToInt32(s[1].ToString())] + "\n";
                }
            }
            /****************************************装载指令*********************************************************************************************************/
            if (codes[0] == "ld")
            {
                char[] s = codes[1].ToCharArray();

                if (s[0] == 'r')// 操作数 直接寻址  
                {
                    strValue += "1001 " + The_Method.shiliu_erjinzhi(codes[2]) + "1 " + str[Convert.ToInt32(s[1].ToString())] + "\n";
                }
            }
            return strValue;
        }//将指令转换为机器码
    }
}
